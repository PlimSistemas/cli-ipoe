diff -ENwbur a/agent/mibgroup/etherlike-mib/data_access/dot3stats_linux.c b/agent/mibgroup/etherlike-mib/data_access/dot3stats_linux.c
--- a/agent/mibgroup/etherlike-mib/data_access/dot3stats_linux.c	2019-05-22 09:32:46.291560205 -0300
+++ b/agent/mibgroup/etherlike-mib/data_access/dot3stats_linux.c	2019-05-22 09:32:46.251560899 -0300
@@ -122,6 +122,9 @@
     struct ifreq    ifrq;
     int rc = 0;
 
+    if (netsnmp_access_interface_ignore(name))
+        return 0;
+
     DEBUGMSGTL(("access:dot3StatsTable:interface_ioctl_ifindex_get", "called\n"));
                  
     rc = _dot3Stats_ioctl_get(fd, SIOCGIFINDEX, &ifrq, name);
diff -ENwbur a/agent/mibgroup/if-mib/data_access/interface.c b/agent/mibgroup/if-mib/data_access/interface.c
--- a/agent/mibgroup/if-mib/data_access/interface.c	2019-05-22 09:32:46.303559997 -0300
+++ b/agent/mibgroup/if-mib/data_access/interface.c	2019-05-22 09:34:31.965731259 -0300
@@ -32,6 +32,7 @@
 static netsnmp_conf_if_list *conf_list = NULL;
 static int need_wrap_check = -1;
 static int _access_interface_init = 0;
+static netsnmp_ignore_if_list *ignore_list = NULL;
 
 /*
  * local static prototypes
@@ -45,6 +46,8 @@
 static void _access_interface_entry_save_name(const char *name, oid index);
 static void _parse_interface_config(const char *token, char *cptr);
 static void _free_interface_config(void);
+static void _parse_ignore_if_config(const char *token, char *cptr);
+static void _free_ignore_if_config(void);
 
 
 /**
@@ -56,6 +59,9 @@
     snmpd_register_config_handler("interface", _parse_interface_config,
                                   _free_interface_config,
                                   "name type speed");
+    snmpd_register_config_handler("ignore_if", _parse_ignore_if_config,
+                                  _free_ignore_if_config,
+                                  "name");
 }
 
 
@@ -782,6 +788,20 @@
     }
 }
 
+int netsnmp_access_interface_ignore(const char * name)
+{
+	if(strstr(name, "dummy") != NULL)
+		return 1;
+	else if(strstr(name, "pppoe") != NULL)
+		return 1;
+	else if(strstr(name, "ppp") != NULL)
+		return 1;
+	else if(strstr(name, "ipoe") != NULL)
+		return 1;
+
+	return 0;
+}
+
 /**---------------------------------------------------------------------*/
 /*
  * interface config token
@@ -857,3 +877,58 @@
     }
     conf_list = NULL;
 }
+
+/**---------------------------------------------------------------------*/
+/*
+ * ignore interface config token
+ */
+/**
+ */
+static void
+_parse_ignore_if_config(const char *token, char *cptr)
+{
+    netsnmp_ignore_if_list *if_ptr, *if_new;
+    char                   *name, *st;
+
+    name = strtok_r(cptr, " \t", &st);
+    if (!name) {
+        config_perror("Missing NAME parameter");
+        return;
+    }
+    if_ptr = ignore_list;
+    while (if_ptr)
+        if (strcmp(if_ptr->name, name))
+            if_ptr = if_ptr->next;
+        else
+            break;
+    if (if_ptr) {
+        config_pwarn("Duplicate ignore interface specification");
+        return;
+    }
+    if_new = SNMP_MALLOC_TYPEDEF(netsnmp_ignore_if_list);
+    if (!if_new) {
+        config_perror("Out of memory");
+        return;
+    }
+    if_new->name = strdup(name);
+    if (!if_new->name) {
+        config_perror("Out of memory");
+        free(if_new);
+        return;
+    }
+    if_new->next = ignore_list;
+    ignore_list = if_new;
+}
+
+static void
+_free_ignore_if_config(void)
+{
+    netsnmp_ignore_if_list   *if_ptr = ignore_list, *if_next;
+    while (if_ptr) {
+        if_next = if_ptr->next;
+        free(NETSNMP_REMOVE_CONST(char *, if_ptr->name));
+        free(if_ptr);
+        if_ptr = if_next;
+    }
+    ignore_list = NULL;
+}
diff -ENwbur a/agent/mibgroup/if-mib/data_access/interface_linux.c b/agent/mibgroup/if-mib/data_access/interface_linux.c
--- a/agent/mibgroup/if-mib/data_access/interface_linux.c	2019-05-22 09:32:46.331559511 -0300
+++ b/agent/mibgroup/if-mib/data_access/interface_linux.c	2019-05-22 09:32:46.207561662 -0300
@@ -700,6 +700,9 @@
          */
         *stats++ = 0; /* null terminate name */
 
+        if (netsnmp_access_interface_ignore(ifstart))
+            continue;
+
         if_index = netsnmp_arch_interface_index_find(ifstart);
 
         /*
diff -ENwbur a/agent/mibgroup/ip-mib/data_access/ipaddress_linux.c b/agent/mibgroup/ip-mib/data_access/ipaddress_linux.c
--- a/agent/mibgroup/ip-mib/data_access/ipaddress_linux.c	2019-05-22 09:32:46.363558957 -0300
+++ b/agent/mibgroup/ip-mib/data_access/ipaddress_linux.c	2019-05-22 09:32:46.227561315 -0300
@@ -262,6 +262,10 @@
         DEBUGMSGTL(("access:ipaddress:container",
                     "addr %s, index %d, pfx %d, scope %d, flags 0x%X, name %s\n",
                     addr, if_index, pfx_len, scope, flags, if_name));
+
+        if (netsnmp_access_interface_ignore(if_name))
+            continue;
+
         /*
          */
         entry = netsnmp_access_ipaddress_entry_create();
diff -ENwbur a/include/net-snmp/data_access/interface.h b/include/net-snmp/data_access/interface.h
--- a/include/net-snmp/data_access/interface.h	2019-05-22 09:32:46.255560829 -0300
+++ b/include/net-snmp/data_access/interface.h	2019-05-22 09:32:46.147562703 -0300
@@ -204,6 +204,11 @@
 
     typedef netsnmp_conf_if_list conf_if_list; /* backwards compat */
 
+typedef struct _ignore_if_list {
+    const char     *name;
+    struct _ignore_if_list *next;
+} netsnmp_ignore_if_list;
+
 /**---------------------------------------------------------------------*/
 /*
  * ACCESS function prototypes
